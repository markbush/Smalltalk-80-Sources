Object subclass: #Message
  instanceVariableNames: 'selector args'
  classVariableNames: ''
  poolDictionaries: ''
  category: 'Kernel-Methods'!
Message class
  instanceVariableNames: ''!
"-----------------------------------"!
Message comment:
'I represent a selector and its argument values.

Generally, the system does not use instances of Message.  However, when a message is not understood by its receiver, the interpreter will make up a Message (to capture the information involved in an actual message transmission) and send it as an argument with the message doesNotUnderstand:.'!
"-----------------------------------"!
!Message class methodsFor: 'instance creation'!
selector: aSymbol
	"Answer an instance of me with unary selector, aSymbol."

	^self new setSelector: aSymbol arguments: (Array new: 0)!
selector: aSymbol argument: anObject
	"Answer an instance of me whose selector is aSymbol and single argument
	is anObject."

	^self new setSelector: aSymbol arguments: (Array with: anObject)!
selector: aSymbol arguments: anArray
	"Answer an instance of me with selector, aSymbol, and arguments,
	anArray."

	^self new setSelector: aSymbol arguments: anArray!
"-----------------------------------"!
!Message methodsFor: 'accessing'!
arguments
	"Answer the arguments of the receiver."
	^args!
selector
	"Answer the selector of the receiver."
	^selector!
"-----------------------------------"!
!Message methodsFor: 'printing'!
printOn: aStream
	aStream nextPutAll: 'a Message with selector: '.
	selector printOn: aStream.
	aStream nextPutAll: ' and arguments: '.
	args printOn: aStream.
	^aStream!
storeOn: aStream
	aStream nextPut: $(.
	aStream nextPutAll: 'Message selector: '.
	selector storeOn: aStream.
	aStream nextPutAll: ' arguments: '.
	args storeOn: aStream.
	aStream nextPut: $)!
"-----------------------------------"!
!Message methodsFor: 'private'!
setSelector: aSymbol arguments: anArray
	selector _ aSymbol.
	args _ anArray!
