Arc subclass: #Circle
  instanceVariableNames: ''
  classVariableNames: ''
  poolDictionaries: ''
  category: 'Graphics-Paths'!
Circle class
  instanceVariableNames: ''!
"-----------------------------------"!
Circle comment:
'A full circle is made from four arcs.'!
"-----------------------------------"!
!Circle class methodsFor: 'examples'!
exampleOne
	"Click any button somewhere on the screen.  The point will be the
	center of the circcle of radius 150."

	| aCircle aForm |
	aForm _ Form new extent: 1@30.
	aForm black.
	aCircle _ Circle new.
	aCircle form: aForm.
	aCircle radius: 150.
	aCircle center: Sensor waitButton.
	aCircle displayOn: Display

	"Circle exampleOne."!
exampleTwo
	"Designate a rectangular area that should be used as the brush for displaying the
	circle. Click any button at a point on the screen which will be the center location
	for the circle.  The curve will be displayed with a long black form."

	| aCircle aForm |
	aForm _ Form fromUser.
	aCircle _ Circle new.
	aCircle form: aForm.
	aCircle radius: 150.
	aCircle center: Sensor waitButton.
	aCircle displayOn: Display at: 0 @ 0 rule: Form reverse

	 "Circle exampleTwo."!
"-----------------------------------"!
!Circle methodsFor: 'display box access'!
computeBoundingBox
	^center - radius + form offset extent: form extent + (radius * 2) asPoint!
"-----------------------------------"!
!Circle methodsFor: 'displaying'!
displayOn: aDisplayMedium at: aPoint clippingBox: clipRect rule: anInteger mask: aForm
	1 to: 4 do:
		[:i |
		super quadrant: i.
		super displayOn: aDisplayMedium at: aPoint clippingBox: clipRect rule: anInteger mask: aForm]!
displayOn: aDisplayMedium transformation: aTransformation clippingBox: clipRect rule: anInteger mask: aForm
	1 to: 4 do:
		[:i |
		super quadrant: i.
		super displayOn: aDisplayMedium transformation: aTransformation clippingBox: clipRect rule: anInteger mask: aForm]!
